{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","movieId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","emptyString","NewMovie","onAdd","count","increaseCount","setTitle","setDescription","setImgUrl","setImdbUrl","imdbId","setImdbId","onSubmit","preventDefault","Date","now","oldCount","addMovie","newTitle","newDescription","newUrl","newId","disabled","App","length","moviesCount","increaseMoviesCount","push","oldMoviesCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3613fd55.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.movieId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nconst emptyString = '';\n\ntype NewMovieProps = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie = ({ onAdd }: NewMovieProps) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, increaseCount] = useState(3);\n  const [title, setTitle] = useState(emptyString);\n  const [description, setDescription] = useState(emptyString);\n  const [imgUrl, setImgUrl] = useState(emptyString);\n  const [imdbUrl, setImdbUrl] = useState(emptyString);\n  const [imdbId, setImdbId] = useState(emptyString);\n  const addMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      movieId: `${Date.now()}${imdbId}`,\n    });\n    increaseCount(oldCount => oldCount + 1);\n    setTitle(emptyString);\n    setDescription(emptyString);\n    setImgUrl(emptyString);\n    setImdbUrl(emptyString);\n    setImdbId(emptyString);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => addMovie(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={newTitle => setTitle(newTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={newDescription => setDescription(newDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={newUrl => setImgUrl(newUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={newUrl => setImdbUrl(newUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={newId => setImdbId(newId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={\n              title === emptyString\n              || imgUrl === emptyString\n              || imdbUrl === emptyString\n              || imdbId === emptyString\n            }\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nconst movies = moviesFromServer.map((movie) => ({\n  ...movie,\n  movieId: movie.imdbId,\n}));\n\nexport const App = () => {\n  const [moviesCount, increaseMoviesCount] = useState(movies.length);\n\n  const onAdd = (movie: Movie) => {\n    if (moviesCount === movies.length) {\n      movies.push(movie);\n      increaseMoviesCount(oldMoviesCount => oldMoviesCount + 1);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}